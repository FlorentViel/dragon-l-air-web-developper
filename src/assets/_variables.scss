$white: #ffffff;
$black: #000000;
$blue: #212BB2;


/* Theme light */

$bluelight: rgb(74,204,236);
$StartLightGradient: rgb(116, 108, 247);
$EndLightGradient: rgb(74,204,234);
$textSecondaryLight: #000;
$linkLight: #006F8A;
$borderLightGardient: linear-gradient(0deg, rgb(74,204,234) 0%, rgb(116, 108, 247) 75%);
$hoverLight: #8F04FF1A;
$font-family: 'Montserrat', sans-serif;
$background-image-light: url('@/assets/images/pictures/dev_web_pc_light.jpg');
$background-image-dark: url('@/assets/images/pictures/dev_web_pc_dark.jpg');

/* background */    

$bgLight1: #E7F9FF;
$bgLight2: #FAFAFF;
$bgLight3: #DFF9FF;

/* Theme dark */

$linkdark: #9BAAFF;
$linkdarkhover: #E5EDFF;
$StartDarkGradient: rgb(51,66,255);
$EndDarkGradient: rgb(115 0 255);
$borderDarkGardient: linear-gradient(0deg, rgb(51,66,255) 0%, rgb(115 0 255) 75%);


$borderDark: $StartDarkGradient;
$borderLight: $StartLightGradient;
$bgLightNav: #f9feff;


$textPrimaryDark: rgb(51,66,255);
$textSecondaryDark: #E5EDFF;
$shadow: rgba( 31, 38, 135, 0.37);

/* background */

$bgDark1 : rgba(0,36,41,1);
$bgDark2: rgb(26, 39, 39);
$bgDarkNav : #001214;

  /* text */

  @mixin font-weight-700 {
    font-weight: 700;
    line-height: normal;
  }

  @mixin li-list-none {
    list-style-type: none;
  }

  /* responsive images */
  
  /* flexbox */

  
  @mixin flex-row {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
  }

  @mixin flex-column {
    display: flex;
    flex-direction: column;
  }

  @mixin flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  @mixin flex-0-50 {
    flex: 0 0 50%;
  }

  @mixin flex-1-50 {
    flex: 1 1 50%;
  }

  @mixin flex-1-100 {
    flex: 1 1 100%;
  }

  /* margin */

  @mixin margin-5-auto {
    margin: 5% auto;

  }
  
  @mixin margin-x-1 {
    margin-left: 1em;
    margin-right: 1em;
  }

  @mixin margin-x-2 {
    margin-left: 2em;
    margin-right: 2em;
  }

  @mixin margin-x-3 {
    margin-left: 3em;
    margin-right: 3em;
  }

  @mixin margin-y-1 {
    margin-top: 1em;
    margin-bottom: 1em;
  }

  @mixin margin-y-2 {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  @mixin margin-y-3 {
    margin-top: 3em;
    margin-bottom: 3em;
  }
  /* padding */

  $base-padding: 1rem;
  $padding-multiplier: 2;

  // Fonction pour calculer le padding dynamique
@function dynamic-padding($multiplier) {
  @return $base-padding * $multiplier;
}

// Variables de largeur de conteneur
$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
  xxl: 1320px
);

// Mixin pour le conteneur
@mixin container-max-widths($breakpoints) {
  @each $breakpoint, $max-width in $breakpoints {
    @include media-breakpoint-up($breakpoint) {
      max-width: $max-width;
    }
  }
}

// Mixin pour les points de rupture
@mixin media-breakpoint-up($name) {
  $breakpoints: (
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px
  );
  $min-width: map-get($breakpoints, $name);

  @if $min-width {
    @media (min-width: $min-width) {
      @content;
    }
  }
}